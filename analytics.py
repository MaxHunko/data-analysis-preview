import pandas as pd
import plotly.express as px
import os

# === –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–ø–∫–∏ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ ===
if not os.path.exists("graphs"):
    os.makedirs("graphs")
    print("üìÅ –°—Ç–≤–æ—Ä–µ–Ω–æ –ø–∞–ø–∫—É 'graphs'")
else:
    print("üìÅ –ü–∞–ø–∫–∞ 'graphs' –≤–∂–µ —ñ—Å–Ω—É—î")

# === –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö ===
print("üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–∑ —Ñ–∞–π–ª—É...")
df = pd.read_excel("detailed_sales_data.xlsx")
df["–î–∞—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"] = pd.to_datetime(df["–î–∞—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"])
df["–ú—ñ—Å—è—Ü—å"] = df["–î–∞—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"].dt.to_period("M").astype(str)
df["–¢–∏–∂–¥–µ–Ω—å"] = df["–î–∞—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"].dt.to_period("W")
df["–î–µ–Ω—å"] = df["–î–∞—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"].dt.date
df["–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"] = df["–¢–µ–ª–µ—Ñ–æ–Ω"]
print("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ\n")

# === –ö–ª—é—á–æ–≤—ñ –º–µ—Ç—Ä–∏–∫–∏ ===
dau = df.groupby("–î–µ–Ω—å")["–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"].nunique().mean().round(2)
wau = df.groupby("–¢–∏–∂–¥–µ–Ω—å")["–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"].nunique().mean().round(2)
mau = df.groupby("–ú—ñ—Å—è—Ü—å")["–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"].nunique().mean().round(2)
total_users = df["–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"].nunique()
repeat_users = df.groupby("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á").filter(lambda x: len(x) > 1)["–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"].nunique()
retention_rate = round((repeat_users / total_users) * 100, 2)
churn_rate = round(100 - retention_rate, 2)
ltv = df.groupby("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á")["–°—É–º–∞"].sum().mean().round(2)

# === HTML-–±–ª–æ–∫ –∑ –∫–ª—é—á–æ–≤–∏–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏ ===
metrics_block = f"""
<div class="chart" style="width: 98%; padding:20px; border-radius:10px; font-size:18px; line-height:1.6">
    <h2 style="color:#00d4ff">üìä –ö–ª—é—á–æ–≤—ñ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–¥—É–∫—Ç—É</h2>
    <ul style="list-style:none; padding:0">
        <li>üî∏ <strong>DAU</strong> (–Ω–∞ –¥–µ–Ω—å): {dau}</li>
        <li>üî∏ <strong>WAU</strong> (–Ω–∞ —Ç–∏–∂–¥–µ–Ω—å): {wau}</li>
        <li>üî∏ <strong>MAU</strong> (–Ω–∞ –º—ñ—Å—è—Ü—å): {mau}</li>
        <li>üîÅ <strong>Retention Rate</strong>: {retention_rate}%</li>
        <li>‚ùå <strong>Churn Rate</strong>: {churn_rate}%</li>
        <li>üí∞ <strong>LTV</strong> (—Å–µ—Ä–µ–¥–Ω—ñ–π –¥–æ—Ö—ñ–¥ –∑ –∫–ª—ñ—î–Ω—Ç–∞): ‚Ç¥{ltv}</li>
    </ul>
</div>
"""

# === –ì—Ä–∞—Ñ—ñ–∫–∏ ===
figures = []

print("üìà –¢–æ–ø-10 –ø—Ä–æ–¥–∞–≤–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤...")
top_products = df["–ü—Ä–æ–¥—É–∫—Ç"].value_counts().nlargest(10).reset_index()
top_products.columns = ["–ü—Ä–æ–¥—É–∫—Ç", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å"]
fig1 = px.bar(top_products, x="–ü—Ä–æ–¥—É–∫—Ç", y="–ö—ñ–ª—å–∫—ñ—Å—Ç—å", title="üîù –¢–æ–ø-10 –ø—Ä–æ–¥–∞–≤–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤", color="–ö—ñ–ª—å–∫—ñ—Å—Ç—å")
figures.append(fig1)

print("üìà –î–æ—Ö—ñ–¥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö...")
rev_cat = df.groupby("–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Ç–æ–≤–∞—Ä—É")["–°—É–º–∞"].sum().reset_index().sort_values("–°—É–º–∞", ascending=False)
fig2 = px.bar(rev_cat, x="–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Ç–æ–≤–∞—Ä—É", y="–°—É–º–∞", title="üí∞ –î–æ—Ö—ñ–¥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö", color="–°—É–º–∞")
figures.append(fig2)

print("üìà –°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫ –ø–æ –º—ñ—Å—Ç–∞—Ö...")
avg_city = df.groupby("–ú—ñ—Å—Ç–æ")["–°—É–º–∞"].mean().sort_values(ascending=False).head(10).reset_index()
fig3 = px.bar(avg_city, x="–ú—ñ—Å—Ç–æ", y="–°—É–º–∞", title="üèôÔ∏è –°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫ –ø–æ –º—ñ—Å—Ç–∞—Ö", color="–°—É–º–∞")
figures.append(fig3)

print("üìà –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–æ –º—ñ—Å—è—Ü—è—Ö...")
monthly = df.groupby("–ú—ñ—Å—è—Ü—å").size().reset_index(name="–ö—ñ–ª—å–∫—ñ—Å—Ç—å")
fig4 = px.line(monthly, x="–ú—ñ—Å—è—Ü—å", y="–ö—ñ–ª—å–∫—ñ—Å—Ç—å", title="üìà –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–æ –º—ñ—Å—è—Ü—è—Ö", markers=True)
figures.append(fig4)

print("üìà –í–ø–ª–∏–≤ –∑–Ω–∏–∂–æ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∂—ñ...")
discount = df.groupby("–ó–Ω–∏–∂–∫–∞ (%)")["–°—É–º–∞"].sum().reset_index()
fig5 = px.bar(discount, x="–ó–Ω–∏–∂–∫–∞ (%)", y="–°—É–º–∞", title="üîª –í–ø–ª–∏–≤ –∑–Ω–∏–∂–æ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∂—ñ", color="–°—É–º–∞")
figures.append(fig5)

print("üìà –ü–æ–ø—É–ª—è—Ä–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –æ–ø–ª–∞—Ç–∏...")
payment = df["–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç–∏"].value_counts().reset_index()
payment.columns = ["–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç–∏", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å"]
fig6 = px.pie(payment, names="–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç–∏", values="–ö—ñ–ª—å–∫—ñ—Å—Ç—å", title="üí≥ –ü–æ–ø—É–ª—è—Ä–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –æ–ø–ª–∞—Ç–∏")
figures.append(fig6)

print("üìà –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫ –ø–æ –º—ñ—Å—Ç–∞—Ö...")
city_orders = df["–ú—ñ—Å—Ç–æ"].value_counts().head(10).reset_index()
city_orders.columns = ["–ú—ñ—Å—Ç–æ", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å"]
fig7 = px.bar(city_orders, x="–ú—ñ—Å—Ç–æ", y="–ö—ñ–ª—å–∫—ñ—Å—Ç—å", title="üèòÔ∏è –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫ –ø–æ –º—ñ—Å—Ç–∞—Ö", color="–ö—ñ–ª—å–∫—ñ—Å—Ç—å")
figures.append(fig7)

print("üìà –ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ —Ç–æ–≤–∞—Ä–∏ –ø–æ –º—ñ—Å—Ç–∞—Ö...")
city_product_counts = df.groupby(["–ú—ñ—Å—Ç–æ", "–ü—Ä–æ–¥—É–∫—Ç"]).size().reset_index(name="–ö—ñ–ª—å–∫—ñ—Å—Ç—å")
idx = city_product_counts.groupby("–ú—ñ—Å—Ç–æ")["–ö—ñ–ª—å–∫—ñ—Å—Ç—å"].idxmax()
top_products_by_city = city_product_counts.loc[idx].sort_values("–ö—ñ–ª—å–∫—ñ—Å—Ç—å", ascending=False)
fig8 = px.bar(top_products_by_city, x="–ö—ñ–ª—å–∫—ñ—Å—Ç—å", y="–ú—ñ—Å—Ç–æ", color="–ü—Ä–æ–¥—É–∫—Ç", orientation='h',
              title="üèÜ –ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ —Ç–æ–≤–∞—Ä–∏ –≤ –º—ñ—Å—Ç–∞—Ö")
figures.append(fig8)

# === HTML –∑ –≥—Ä–∞—Ñ—ñ–∫–∞–º–∏ ===
print("üß© –û–±'—î–¥–Ω–∞–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ –≤ –æ–¥–∏–Ω HTML...")

html_blocks = []
for i, fig in enumerate(figures):
    div_id = f"plot{i}"
    fig_html = fig.to_html(full_html=False, include_plotlyjs='cdn', div_id=div_id)
    html_blocks.append(f'<div class="chart">{fig_html}</div>')

# === –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è HTML ===
final_html = f"""
<html>
<head>
    <meta charset="utf-8">
    <title>–ó–≤—ñ—Ç –∑ –ø—Ä–æ–¥–∞–∂—ñ–≤</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <style>
        body {{
            background: #f4f4f4;
            font-family: Arial;
        }}
        .container {{
            display: flex;
            flex-wrap: wrap;
            justify-content: space-around;
        }}
        .chart {{
            width: 48%;
            margin: 10px 0;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            padding: 10px;
        }}
    </style>
</head>
<body>
    <h1 style="text-align:center">üìä –ó–≤—ñ—Ç –∑ –ø—Ä–æ–¥–∞–∂—ñ–≤</h1>
    <div class="container">
        {metrics_block}
        {''.join(html_blocks)}
    </div>
</body>
</html>
"""

# === –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è HTML ===
with open("graphs/all_graphs.html", "w", encoding="utf-8") as f:
    f.write(final_html)

print("‚úÖ –£—Å—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ + –º–µ—Ç—Ä–∏–∫–∏ –æ–±'—î–¥–Ω–∞–Ω–æ –≤ 'graphs/all_graphs.html'")
